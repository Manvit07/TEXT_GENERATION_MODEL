# -*- coding: utf-8 -*-
"""TEXT_GENERATION_MODEL.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/12BMFyQjNWcdiEvBkBDLp20H3KucNU_3y
"""

!pip install transformers --quiet

from transformers import pipeline, set_seed, GPT2Tokenizer, GPT2LMHeadModel
import torch

device = torch.device("cuda:0" if torch.cuda.is_available() else "cpu")
print("âœ… Using device:", device)

model_name = "gpt2-large"
tokenizer = GPT2Tokenizer.from_pretrained(model_name)
model = GPT2LMHeadModel.from_pretrained(model_name).to(device)

tokenizer.pad_token = tokenizer.eos_token
model.config.pad_token_id = tokenizer.eos_token_id

set_seed(42)

def generate_text(prompt, max_length=250, temperature=0.8, top_p=0.95, num_return_sequences=1):
    """
    Generate high-quality coherent text from a prompt using GPT-2 Large on GPU.
    """
    inputs = tokenizer(prompt, return_tensors="pt").to(device)
    outputs = model.generate(
        **inputs,
        max_length=max_length,
        do_sample=True,
        temperature=temperature,
        top_p=top_p,
        num_return_sequences=num_return_sequences,
        pad_token_id=tokenizer.eos_token_id
    )

    return [tokenizer.decode(output, skip_special_tokens=True) for output in outputs]

while True:
    user_prompt = input("\nEnter your prompt (or type 'exit' to quit):\n> ")

    if user_prompt.strip().lower() == 'exit':
        print(" Exiting.")
        break

    print("\n Generating text...\n")
    result = generate_text(user_prompt, max_length=220)[0]
    print(" Generated Paragraph:\n")
    print(result)